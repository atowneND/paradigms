import cherrypy
from movies import MovieController
from users import UserController
from votes import VoteController
from ratings import RatingController
from reset import ResetController
from auth import AuthManager
from _movie_database import _movie_database

class optionsController:
    def OPTIONS(self, *args, **kwargs):
        return ""

def CORS():
    cherrypy.response.headers["Access-Control-Allow-Origin"] = "*"
    cherrypy.response.headers["Access-Control-Allow-Methods"] = "GET, PUT, POST, DELETE, OPTIONS"
    cherrypy.response.headers["Access-Control-Allow-Credentials"] = "true"

def start_service():
    dispatcher = cherrypy.dispatch.RoutesDispatcher()

    authManager = AuthManager()
    # lots of junk

    voteController = VoteController(mdb=mdb, am=authManager)
    ratingController = RatingController(mdb=mdb, am=authManager)
    resetController = ResetController(mdb=mdb, am=authManager)

    dispatcher.connect('movie_get', '/movies/:movie_id', controller=movieController, action='GET', conditions=dict(method=['GET']))
    dispatcher.connect('movie_put', '/movies/:movie_id', controller=movieController, action='PUT', conditions=dict(method=['PUT']))
    dispatcher.connect('movie_delete', '/movies/:movie_id', controller=movieController, action='DELETE', conditions=dict(method=['DELETE']))
    dispatcher.connect('movie_index_get', '/movies/', controller=movieController, action='GET_INDEX', conditions=dict(method=['GET']))
    dispatcher.connect('movie_index_put', '/movies/', controller=movieController, action='POST_INDEX', conditions=dict(method=['POST']))
    dispatcher.connect('movie_index_delete', '/movies/', controller=movieController, action='DELETE_INDEX', conditions=dict(method=['DELETE']))

    dispatcher.connect('user_get', '/users/:user_id', controller=userController, action = 'GET', conditions=dict(method=['GET']))
    dispatcher.connect('user_put', '/users/:user_id', controller=userController, action = 'PUT', conditions=dict(method=['PUT']))
    dispatcher.connect('user_delete', '/users/:user_id', controller=userController, action = 'DELETE', conditions=dict(method=['DELETE']))
    dispatcher.connect('user_index_get', '/users/', controller=userController, action = 'GET_INDEX', conditions=dict(method=['GET']))
    dispatcher.connect('user_index_put', '/users/', controller=userController, action = 'POST_INDEX', conditions=dict(method=['POST']))
    dispatcher.connect('user_index_delete', '/users/', controller=userController, action = 'DELETE', conditions=dict(method=['DELETE']))

    dispatcher.connect('vote_get', '/recommendations/:user_id', controller=voteController, action = 'GET', conditions=dict(method=['GET']))
    dispatcher.connect('vote_put', '/recommendations/:user_id', controller=voteController, action = 'PUT', conditions=dict(method=['PUT']))
    dispatcher.connect('vote_index_delete', '/recommendations/', controller=voteController, action = 'DELETE_INDEX', conditions=dict(method=['DELETE']))

    dispatcher.connect('rating_get', '/ratings/:movie_id', controller=ratingController, action='GET', conditions=dict(method=['GET']))

    dispatcher.connect('reset_put', '/reset/:movie_id', controller=resetController, action='PUT', conditions=dict(method=['PUT']))
    dispatcher.connect('reset_index_put', '/reset/', controller=resetController, action='PUT_INDEX', conditions=dict(method=['PUT']))

    dispatcher.connect('movie_options', '/movies/:movie_id', controller=optionsController, action='OPTIONS', conditinos=dict(method=['OPTIONS']))


    conf={'global':{
            'server.socket_host':'student02.cse.nd.edu',
            'server.socket_port':40001,
            },
          '/':{
            'request.dispatch':dispatcher,
            'tools.CORS.on':True,
            }}
    cherrpy.config.update(conf)
    app=cherrypy.tree.mount(None,config=conf)
    chererypy.quickstart(app)

if __name__=='__main__':
    cherrypy.tools.CORS = cherrpy.Tool('before_finalize',CORS)
    start_service()

